#!/usr/local/bin/python3
#post-receive

import os
import sys
import configparser
import subprocess


DOC_CODE                        = "utf-8"

UPDATE_TABLE_PATH               = "/etc/tag_checker/update.ini"
SECTION_UPD                     = "UPDATE"
OPTION_UPD                      = "to_update"

GIT_REPO_PATH_CMD               = "git rev-parse --show-toplevel"


def exec_cmd(cmd):
    proc = subprocess.Popen(['{:s}\n'.format(cmd)],
                            stdout=subprocess.PIPE,
                            stderr=subprocess.PIPE,
                            shell=True)

    out, _ = proc.communicate()

    out = out.decode(DOC_CODE).strip()

    return out


def get_current_repo_name():
    repo_path = exec_cmd(GIT_REPO_PATH_CMD)

    if not repo_path:
        repo_path = os.getcwd()

    return os.path.basename(repo_path)


def add_repo_to_update_table(repo_name):
    cfg_parser = configparser.ConfigParser()

    cfg_parser.read(UPDATE_TABLE_PATH)

    repos = None

    if not cfg_parser.has_section(SECTION_UPD):
        cfg_parser[SECTION_UPD] = {}

    if cfg_parser.has_option(SECTION_UPD, OPTION_UPD):
        repos = cfg_parser[SECTION_UPD][OPTION_UPD]

    if repos is None:
        repos = repo_name
    else:
        repos_splitted = repos.split("\n")
        repos_splitted.append(repo_name)

        repos = "\n".join(repos_splitted)

    cfg_parser[SECTION_UPD][OPTION_UPD] = repos

    with open(UPDATE_TABLE_PATH, 'w', c_d.DOC_ENCODING) as file:
        cfg_parser.write(file)

        file.flush()
        file.close()


if __name__ == "__main__":
    repo_name = get_current_repo_name()
    add_repo_to_update_table(repo_name)

    sys.stdout.write("Add repo {:s} to {:s}".format(repo_name, UPDATE_TABLE_PATH))
    sys.stdout.flush()